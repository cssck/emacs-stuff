;;; ement-autoloads.el --- automatically extracted autoloads (do not edit)   -*- lexical-binding: t -*-
;; Generated by the `loaddefs-generate' function.

;; This file is part of GNU Emacs.

;;; Code:

(add-to-list 'load-path (or (and load-file-name (directory-file-name (file-name-directory load-file-name))) (car load-path)))



;;; Generated autoloads from ement.el

(autoload 'ement-connect "ement" "\
Connect to Matrix with USER-ID and PASSWORD, or using SESSION.
Interactively, with prefix, ignore a saved session and log in
again; otherwise, use a saved session if `ement-save-sessions' is
enabled and a saved session is available, or prompt to log in if
not enabled or available.

If USER-ID or PASSWORD are not specified, the user will be
prompted for them.

If URI-PREFIX is specified, it should be the prefix of the
server's API URI, including protocol, hostname, and optionally
the port, e.g.

  \"https://matrix-client.matrix.org\"
  \"http://localhost:8080\"

(fn &key USER-ID PASSWORD URI-PREFIX SESSION)" t)
(register-definition-prefixes "ement" '("ement-"))


;;; Generated autoloads from ement-api.el

(register-definition-prefixes "ement-api" '("ement-api-error"))


;;; Generated autoloads from ement-directory.el

(autoload 'ement-directory "ement-directory" "\
View the public room directory on SERVER with SESSION.
Show up to LIMIT rooms.  Interactively, with prefix, prompt for
server and LIMIT.

SINCE may be a next-batch token.

(fn &key SERVER SESSION SINCE (LIMIT 100))" t)
(autoload 'ement-directory-search "ement-directory" "\
View public rooms on SERVER matching QUERY.
QUERY is a string used to filter results.

(fn QUERY &key SERVER SESSION SINCE (LIMIT 1000))" t)
(autoload 'ement-view-space "ement-directory" "\
View child rooms in SPACE on SESSION.
SPACE may be a room ID or an `ement-room' struct.

(fn SPACE SESSION)" t)
(register-definition-prefixes "ement-directory" '("ement-directory-"))


;;; Generated autoloads from ement-lib.el

(register-definition-prefixes "ement-lib" '("ement-"))


;;; Generated autoloads from ement-macros.el

(register-definition-prefixes "ement-macros" '("ement-"))


;;; Generated autoloads from ement-notifications.el

(autoload 'ement-notifications "ement-notifications" "\
Show the notifications buffer for SESSION.
FROM may be a \"next_token\" token from a previous request.
LIMIT may be a maximum number of events to return.  ONLY may be
the string \"highlight\" to only return notifications that have
the highlight tweak set.  THEN and ELSE may be callbacks passed
to `ement-api', which see.

(fn SESSION &key FROM LIMIT ONLY (THEN (apply-partially #\\='ement-notifications-callback session)) ELSE)" t)
(register-definition-prefixes "ement-notifications" '("ement-notifications-"))


;;; Generated autoloads from ement-notify.el

(register-definition-prefixes "ement-notify" '("ement-notify"))


;;; Generated autoloads from ement-room.el

(defvar ement-room-self-insert-mode nil "\
Non-nil if Ement-Room-Self-Insert mode is enabled.
See the `ement-room-self-insert-mode' command
for a description of this minor mode.
Setting this variable directly does not take effect;
either customize it (see the info node `Easy Customization')
or call the function `ement-room-self-insert-mode'.")
(custom-autoload 'ement-room-self-insert-mode "ement-room" nil)
(autoload 'ement-room-self-insert-mode "ement-room" "\
When enabled, `self-insert-command' keys begin a new message.

The user options `ement-room-self-insert-chars' and
`ement-room-self-insert-commands' determine the specific keys and
commands which will have this effect.

When this mode is enabled, `ement-room-mode-self-insert-keymap'
takes precedence over `ement-room-mode-map', with the shadowed
key bindings in `ement-room-mode-map' becoming accessible via
`ement-room-mode-map-prefix-key'.

If you define custom key bindings in `ement-room-mode-map', you
should call `ement-room-self-insert-mode' after defining those
keys (rather than before).  Your bindings will be functional in
either case, but they may not appear in the help for
`ement-room-mode' if you define them afterwards.

If you bind keys in `ement-room-mode-self-insert-keymap', do so
via `ement-room-mode-self-insert-keymap-update-hook' (see which).

This is a global minor mode.  If called interactively, toggle the
`Ement-Room-Self-Insert mode' mode.  If the prefix argument is positive,
enable the mode, and if it is zero or negative, disable the mode.

If called from Lisp, toggle the mode if ARG is `toggle'.  Enable the
mode if ARG is nil, omitted, or is a positive number.  Disable the mode
if ARG is a negative number.

To check whether the minor mode is enabled in the current buffer,
evaluate `(default-value \\='ement-room-self-insert-mode)'.

The mode's hook is called both when the mode is enabled and when it is
disabled.

(fn &optional ARG)" t)
(register-definition-prefixes "ement-room" '("ement-"))


;;; Generated autoloads from ement-room-list.el

(autoload 'ement-room-list--after-initial-sync "ement-room-list" "\
Call `ement-room-list', ignoring arguments.
To be called from `ement-after-initial-sync-hook'.

(fn &rest IGNORE)")
(defalias 'ement-list-rooms 'ement-room-list)
(autoload 'ement-room-list "ement-room-list" "\
Show a buffer listing Ement rooms, grouped with Taxy KEYS.
After showing it, its window is selected.  The buffer is named
BUFFER-NAME and is shown with DISPLAY-BUFFER-ACTION; or if
DISPLAY-BUFFER-ACTION is nil, the buffer is not displayed.

(fn &key (BUFFER-NAME \"*Ement Room List*\") (KEYS ement-room-list-default-keys) (DISPLAY-BUFFER-ACTION \\='((display-buffer-reuse-window display-buffer-same-window))))" t)
(autoload 'ement-room-list-auto-update "ement-room-list" "\
Automatically update the Taxy room list buffer.
+Does so when variable `ement-room-list-auto-update' is non-nil.
+To be called in `ement-sync-callback-hook'.

(fn SESSION)")
(register-definition-prefixes "ement-room-list" '("ement-room-list-"))


;;; Generated autoloads from ement-tabulated-room-list.el

(autoload 'ement-tabulated-room-list "ement-tabulated-room-list" "\
Show buffer listing joined rooms.
Calls `pop-to-buffer-same-window'.  Interactively, with prefix,
call `pop-to-buffer'.

(fn &rest IGNORE)" t)
(autoload 'ement-tabulated-room-list-auto-update "ement-tabulated-room-list" "\
Automatically update the room list buffer.
Does so when variable `ement-tabulated-room-list-auto-update' is non-nil.
To be called in `ement-sync-callback-hook'.

(fn SESSION)")
(register-definition-prefixes "ement-tabulated-room-list" '("ement-tabulated-room-list-"))

;;; End of scraped data

(provide 'ement-autoloads)

;; Local Variables:
;; version-control: never
;; no-byte-compile: t
;; no-update-autoloads: t
;; no-native-compile: t
;; coding: utf-8-emacs-unix
;; End:

;;; ement-autoloads.el ends here
